<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
    xmlns:file="http://www.springframework.org/schema/integration/file"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/integration
            http://www.springframework.org/schema/integration/spring-integration.xsd
            http://www.springframework.org/schema/integration/file
            http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context.xsd">
 

    <context:property-placeholder location="classpath:springIntegrationTask.properties"/>
    
    <!-- File reading starts from here -->
    <int:channel id="filesInputChannel"/>
    <int:channel id="filesOutputChannel"/>
    <int:publish-subscribe-channel id="validChannel" />
    <int:channel id="invalidChannel"/>
    <int:channel id="outFileChannel"/>
    <int:channel id="processedFileChannel"/>
    
 	<bean id="onlyTextFiles" class="org.springframework.integration.file.config.FileListFilterFactoryBean" p:filenamePattern="*.txt" />
 	
    <file:inbound-channel-adapter channel="filesInputChannel" directory="${APP.DIRECTORY}\\IN" filter="onlyTextFiles" auto-startup="true">
        <int:poller id="poller" fixed-delay="10" />
    </file:inbound-channel-adapter>
        
    <file:file-to-string-transformer input-channel="filesInputChannel" output-channel="filesOutputChannel" charset="UTF-8"/>       
	<!-- File reading end here and converted string push into output channel -->
	
	<!-- routing files as per business requirement. if valid file and need to be processed to sum all the numbers
	 otherwise need to push all invalid files in  ERROR folder-->	
	<bean id="router" class="aero.sita.asl.tasks.routers.ChannelFileRouter"/>
    <int:router input-channel="filesOutputChannel" ref="router" method="handleRouting"/>
    <!-- end of routing -->
    
    <!-- processing all valid files and doing sum of numbers in file and saving file in out folder with output extension -->
    <bean id="outFileProcessor" class="aero.sita.asl.tasks.processers.OutFileProcessor"/>
    <int:service-activator input-channel="validChannel" ref="outFileProcessor" method="sumAllNumbers" output-channel="outFileChannel" />
    
    <bean id="processedFileProcessor" class="aero.sita.asl.tasks.processers.ProcessedFileProcessor"/>
    <int:service-activator input-channel="validChannel" ref="processedFileProcessor" method="processedFileName" output-channel="processedFileChannel" />
	
	<bean id="outFileNameGenerator" class="aero.sita.asl.tasks.processers.OutFileNameGenerator"/>
	<file:outbound-channel-adapter id="outFileChannel"
        directory="${APP.DIRECTORY}\\OUT" auto-create-directory="true" filename-generator="outFileNameGenerator"/>
        
    <bean id="processedFileGenerator" class="aero.sita.asl.tasks.processers.ProcessedFileGenerator"/>
	<file:outbound-channel-adapter id="processedFileChannel"
        directory="${APP.DIRECTORY}\\PROCESSED" auto-create-directory="true" filename-generator="processedFileGenerator"/>
	<!-- end of processing all valid file -->        
    
     <file:outbound-channel-adapter id="invalidChannel"  directory="${APP.DIRECTORY}\\ERROR" auto-create-directory="true" />
</beans>